{"version":3,"sources":["components/produto/ProdutoCard.tsx","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","components/container/CategoriaContainer.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","ProdutoCard","_ref","id","nome","imagem","preco","ehMaisPedido","qtdEstoque","a","createElement","Fragment","as","Link","to","concat","process","className","attached","src","alt","name","Content","toLocaleString","style","currency","CardDescription","props","children","content","textAlign","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","extends_default","lib","isNil","handledProps","propTypes","Card_CardDescription","CardHeader","Card_CardHeader","CardMeta","Card_CardMeta","CardContent","description","extra","header","meta","factories","val","autoGenerateKey","Card_CardContent","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","map_default","item","key","join","Card_Card","Card_CardGroup","d","__webpack_exports__","_Component","Card","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","defineProperty_default","assertThisInitialized_default","e","onClick","inherits_default","createClass_default","value","_this$props","color","fluid","href","image","link","raised","handleClick","Image","create","react","CategoriasContainer","C_Users_Richiely_Batista_Desktop_Stuff_Richiely_Especializa_o_Full_Stack_fea_eCommerce_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","match","C_Users_Richiely_Batista_Desktop_Stuff_Richiely_Especializa_o_Full_Stack_fea_eCommerce_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Richiely_Batista_Desktop_Stuff_Richiely_Especializa_o_Full_Stack_fea_eCommerce_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","state","qtdItens","tag","params","setState","prevProps","location","_this2","produtos","react__WEBPACK_IMPORTED_MODULE_5___default","_AppStore__WEBPACK_IMPORTED_MODULE_10__","Consumer","DataSet","getProdutosByCategoria","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","slice","map","produto","_produto_ProdutoCard__WEBPACK_IMPORTED_MODULE_8__","assign","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","carregarMaisProdutos","React","Component"],"mappings":"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","file":"static/js/5.e651ef89.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Image, Label } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Produto } from '../../model/Produto';\r\n\r\nimport \"./produto.sass\";\r\n\r\n\r\nconst ProdutoCard = ({ id, nome, imagem, preco, ehMaisPedido, qtdEstoque }: Produto) => {\r\n    return (\r\n        <>\r\n            <Card\r\n                as={Link}\r\n                to={`${process.env.PUBLIC_URL}/produto/${id}`}\r\n                className=\"prod\"\r\n            >\r\n                {ehMaisPedido &&\r\n                    <span className=\"ui corner red label\">\r\n                        <i className=\"heart icon\"></i>\r\n                    </span>\r\n                }\r\n\r\n                {qtdEstoque == 0 &&\r\n                    <Label className=\"label-produto-esgotado\" attached='top'>Produto esgotado</Label>\r\n                }\r\n\r\n                <Image src={imagem[0]} className=\"imagemProduto\" alt={name} />\r\n                <Card.Content className={qtdEstoque <= 0 ? 'opaco' : \"\"}>\r\n                    <div>\r\n                        <h1 className=\"infoProduto\">{nome}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"precoProduto\">{preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}</span>\r\n                    </div>\r\n                </Card.Content>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProdutoCard;\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","import React from 'react';\r\nimport { Container, Button } from 'semantic-ui-react';\r\nimport ProdutoCard from '../produto/ProdutoCard';\r\nimport DataSet from '../../mock/dataset';\r\nimport { EcommerceContext } from '../../AppStore';\r\n\r\nimport './categoriasContainer.sass';\r\n\r\ninterface MyProps {\r\n    match: any,\r\n    location: any,\r\n    history: any\r\n}\r\n\r\ninterface CategoriasState {\r\n    qtdItens: number,\r\n    tag: string\r\n}\r\n\r\nclass CategoriasContainer extends React.Component<MyProps, CategoriasState> {\r\n\r\n    constructor(props: MyProps) {\r\n        super(props);\r\n\r\n        const { match } = this.props;\r\n\r\n        this.state = {\r\n            qtdItens: 6,\r\n            tag: match.params.tag,\r\n        };\r\n    }\r\n\r\n    carregarMaisProdutos() {\r\n        this.setState({ qtdItens: this.state.qtdItens + 3 })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: any) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.setState({ qtdItens: 6, tag: this.props.match.params.tag })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var produtos = [];\r\n        return (\r\n            <EcommerceContext.Consumer>\r\n                {value => {\r\n                    produtos = DataSet.getProdutosByCategoria(value!.state.produtos, this.state.tag);\r\n                    return (\r\n                        <Container>\r\n                            <div className=\"categorias-grid\">\r\n                                {\r\n                                    produtos.slice(0, this.state.qtdItens).map(produto => {\r\n                                        return (\r\n                                            <ProdutoCard\r\n                                                key={produto.id}\r\n                                                {...produto}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {this.state.qtdItens < produtos.length &&\r\n                                <Button className=\"centerButton\" onClick={() => this.carregarMaisProdutos()}>Carregar +</Button>\r\n                            }\r\n                        </Container>\r\n                    )\r\n                }}\r\n            </EcommerceContext.Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CategoriasContainer;"],"sourceRoot":""}