{"version":3,"sources":["components/container/CheckoutContainer.tsx"],"names":["EStep","Shipping","Payment","CheckoutContext","React","createContext","getShippingPrice","shipping","Economic","Express","getDiscount","total","payment","Boleto","StepHeader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Consumer","value","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","Group","widths","attached","completed","state","step","active","onClick","dispatch","handleStep","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","name","Content","Title","Description","disabled","Confirm","ConfirmContainer","checkout","_AppStore__WEBPACK_IMPORTED_MODULE_17__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","Header","Row","HeaderCell","width","Body","cart","itens","map","grupo","index","key","Cell","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","Image","size","src","produto","imagem","nome","Meta","descricao","react_currency_formatter__WEBPACK_IMPORTED_MODULE_15___default","quantity","preco","currency","quantidade","getSubtotal","Footer","totalPreco","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","style","height","Column","floated","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","as","Link","to","concat","process","color","finish","ShippingContainer","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","centered","className","raised","handleShipping","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","icon","Subheader","extra","textAlign","PaymentContainer","itemsPerRow","handlePayment","Bitcoin","Cartao","PayPal","Layout","props","view","Fragment","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","CheckoutContainer","None","_this","setState","Provider","this","Component"],"mappings":"qGAyBKA,EAMAC,EAMAC,6KAdCC,EAAkBC,IAAMC,cAAmC,MAsBjE,SAASC,EAAiBC,GACtB,OAAQA,GACJ,KAAKN,EAASO,SACV,OAAO,KACX,KAAKP,EAASQ,QACV,OAAO,KACX,QACI,OAAO,GAInB,SAASC,EAAYC,EAAeC,GAEhC,OAAIA,IAAYV,EAAQW,OACH,GAARF,EAAc,IAGpB,YArCNX,qGAMAC,+FAMAC,gIA4BL,IAAMY,EAAa,kBACfC,EAAAC,EAAAC,cAACd,EAAgBe,SAAjB,KAEQ,SAAAC,GAAK,OAAIA,GACLJ,EAAAC,EAAAC,cAACG,EAAA,EAAKC,MAAN,CAAYC,OAAQ,EAAGC,SAAS,OAC5BR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMI,UAAWL,EAAMM,MAAMC,KAAO1B,EAAMC,SAAU0B,OAAQR,EAAMM,MAAMC,OAAS1B,EAAMC,SAAU2B,QAAS,kBAAMT,EAAMU,SAASC,WAAW9B,EAAMC,YAC5Ic,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,UACXjB,EAAAC,EAAAC,cAACG,EAAA,EAAKa,QAAN,KACIlB,EAAAC,EAAAC,cAACG,EAAA,EAAKc,MAAN,gBACAnB,EAAAC,EAAAC,cAACG,EAAA,EAAKe,YAAN,qCAGRpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgB,SAAUjB,EAAMM,MAAMC,KAAO1B,EAAME,QAASsB,UAAWL,EAAMM,MAAMC,KAAO1B,EAAME,QAASyB,OAAQR,EAAMM,MAAMC,OAAS1B,EAAME,QAAS0B,QAAS,kBAAMT,EAAMU,SAASC,WAAW9B,EAAME,WACtLa,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,gBACXjB,EAAAC,EAAAC,cAACG,EAAA,EAAKa,QAAN,KACIlB,EAAAC,EAAAC,cAACG,EAAA,EAAKc,MAAN,kBACAnB,EAAAC,EAAAC,cAACG,EAAA,EAAKe,YAAN,sCAGRpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgB,SAAUjB,EAAMM,MAAMC,KAAO1B,EAAMqC,QAASV,OAAQR,EAAMM,MAAMC,OAAS1B,EAAMqC,SACjFtB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,SACXjB,EAAAC,EAAAC,cAACG,EAAA,EAAKa,QAAN,KACIlB,EAAAC,EAAAC,cAACG,EAAA,EAAKc,MAAN,yBACAnB,EAAAC,EAAAC,cAACG,EAAA,EAAKe,YAAN,8CAQtBG,EAAmB,WACrB,OACIvB,EAAAC,EAAAC,cAACd,EAAgBe,SAAjB,KAEQ,SAAAqB,GAAQ,OAAIA,GACRxB,EAAAC,EAAAC,cAACuB,EAAA,EAAiBtB,SAAlB,KACK,SAAAC,GAAK,OAAIA,GACNJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,EAAMC,OAAP,KACI3B,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,KACI5B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,CAAkBC,MAAO,IAAzB,YACA9B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,6BACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,mBACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,mBAIR7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMK,KAAP,KACK3B,EAAMM,MAAMsB,KAAKC,QAAQC,IAAI,SAACC,EAAOC,GAClC,OACIpC,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,CAAWS,IAAKD,GACZpC,EAAAC,EAAAC,cAACwB,EAAA,EAAMY,KAAP,KACItC,EAAAC,EAAAC,cAACqC,EAAA,EAAKjC,MAAN,KACIN,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAACqC,EAAA,EAAKC,MAAN,CAAYC,KAAK,OAAOC,IAAKP,EAAMQ,QAAQC,OAAO,KAClD5C,EAAAC,EAAAC,cAACqC,EAAA,EAAKrB,QAAN,KACIlB,EAAAC,EAAAC,cAACqC,EAAA,EAAKZ,OAAN,KAAcQ,EAAMQ,QAAQE,MAC5B7C,EAAAC,EAAAC,cAACqC,EAAA,EAAKO,KAAN,wBACA9C,EAAAC,EAAAC,cAACqC,EAAA,EAAKnB,YAAN,KACKe,EAAMQ,QAAQI,eAMnC/C,EAAAC,EAAAC,cAACwB,EAAA,EAAMY,KAAP,KACItC,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAUd,EAAMQ,QAAQO,MAAOC,SAAS,SAEtDnD,EAAAC,EAAAC,cAACwB,EAAA,EAAMY,KAAP,KACKH,EAAMiB,YAEXpD,EAAAC,EAAAC,cAACwB,EAAA,EAAMY,KAAP,KACItC,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAUd,EAAMkB,cAAeF,SAAS,aAMtEnD,EAAAC,EAAAC,cAACwB,EAAA,EAAM4B,OAAP,KACItD,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,KACI5B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,mBACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,KACI7B,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAU7C,EAAMM,MAAMsB,KAAKuB,WAAYJ,SAAS,UAGlEnD,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,KACI5B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,gBACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,KACI7B,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAU1D,EAAiBiC,EAASd,MAAMlB,UAAW2D,SAAS,UAGhFnD,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,KACI5B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,oBACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,KACK1C,EAAQqC,EAASd,MAAMb,SAD5B,OACyCG,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAUtD,EAAYS,EAAMM,MAAMsB,KAAKuB,WAAY/B,EAASd,MAAMb,SAAUsD,SAAS,QADxI,MAIJnD,EAAAC,EAAAC,cAACwB,EAAA,EAAME,IAAP,KACI5B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,MACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,gBACA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAMG,WAAP,KACI7B,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAU1D,EAAiBiC,EAASd,MAAMlB,UAAYY,EAAMM,MAAMsB,KAAKuB,WAAa5D,EAAYS,EAAMM,MAAMsB,KAAKuB,WAAY/B,EAASd,MAAMb,SAAUsD,SAAS,YAKzLnD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,SACnB1D,EAAAC,EAAAC,cAACsD,EAAA,EAAKG,OAAN,CAAaC,QAAQ,SACjB5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQC,GAAIC,IAAMC,GAAE,GAAAC,OAAKC,iBAAL,iBAA4CC,MAAM,QAAQtD,QAAS,kBAAMT,EAAMU,SAASsD,WAA5G,4BAUlCC,EAAoB,WACtB,OACIrE,EAAAC,EAAAC,cAACd,EAAgBe,SAAjB,KAEQ,SAAAC,GAAK,OAAIA,GACLJ,EAAAC,EAAAC,cAACoE,EAAA,EAAKhE,MAAN,CAAYiE,UAAQ,EAACC,UAAU,YAC3BxE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAAC5D,QAAS,kBAAMT,EAAMU,SAAS4D,eAAexF,EAASO,YAC/DO,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,aADf,eAGRjB,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,uDAEQ7E,EAAAC,EAAAC,cAACoE,EAAA,EAAKpD,QAAN,CAAc4D,OAAK,EAACC,UAAU,UAC1B/E,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAU1D,EAAiBL,EAASO,UAAW0D,SAAS,UAG1EnD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAAC5D,QAAS,kBAAMT,EAAMU,SAAS4D,eAAexF,EAASQ,WAC/DM,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,kBADf,WAGRjB,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,uDAEQ7E,EAAAC,EAAAC,cAACoE,EAAA,EAAKpD,QAAN,CAAc4D,OAAK,EAACC,UAAU,UAC1B/E,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAUgD,SAAU1D,EAAiBL,EAASQ,SAAUyD,SAAS,cAS3F6B,EAAmB,WACrB,OACIhF,EAAAC,EAAAC,cAACd,EAAgBe,SAAjB,KAEQ,SAAAC,GAAK,OAAIA,GACLJ,EAAAC,EAAAC,cAACoE,EAAA,EAAKhE,MAAN,CAAY2E,YAAa,EAAGT,UAAU,YAClCxE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAACN,MAAM,SAAStD,QAAS,kBAAMT,EAAMU,SAASoE,cAAc/F,EAAQgG,WAC5EnF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,UAAUkD,MAAM,WAD/B,UAGAnE,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,6BAGJ7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAACN,MAAM,OAAOtD,QAAS,kBAAMT,EAAMU,SAASoE,cAAc/F,EAAQiG,UAC1EpF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,cAAckD,MAAM,SADnC,0BAGAnE,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,6CAGJ7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAACN,MAAM,OAAOtD,QAAS,kBAAMT,EAAMU,SAASoE,cAAc/F,EAAQkG,UAC1ErF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,SAASkD,MAAM,SAD9B,SAGAnE,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,4BAGJ7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMG,QAAM,EAACN,MAAM,QAAQtD,QAAS,kBAAMT,EAAMU,SAASoE,cAAc/F,EAAQW,UAC3EE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQb,GAAG,KAAKc,MAAI,GAChB5E,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,UAAUkD,MAAM,UAD/B,SAGAnE,EAAAC,EAAAC,cAACyE,EAAA,EAAOE,UAAR,0BAAoC7E,EAAAC,EAAAC,cAAA,QAAMsE,UAAU,cAAhB,6BAU1Dc,EAAS,SAACC,GACZ,IACIC,EACJ,OAFaD,EAAM5E,MAGf,KAAK1B,EAAMC,SACPsG,EAAOxF,EAAAC,EAAAC,cAACmE,EAAD,MACP,MACJ,KAAKpF,EAAME,QACPqG,EAAOxF,EAAAC,EAAAC,cAAC8E,EAAD,MACP,MACJ,KAAK/F,EAAMqC,QACPkE,EAAOxF,EAAAC,EAAAC,cAACqB,EAAD,MACP,MACJ,QACIiE,EAAOxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwF,SAAA,MAEf,OACIzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAASlF,UAAQ,GACZgF,KAMXG,6MACFjF,MAAuB,CACnBC,KAAM1B,EAAMC,SACZM,SAAUN,EAAS0G,KACnB/F,QAASV,EAAQyG,QAGrB9E,SAAqB,CACjBC,WAAY,SAACJ,GAAkBkF,EAAKC,SAAS,CAAEnF,KAAMA,KACrD+D,eAAgB,SAAClF,GAAyBqG,EAAKC,SAAS,CAAEtG,SAAUA,EAAUmB,KAAM1B,EAAME,WAC1F+F,cAAe,SAACrF,GAAuBgG,EAAKC,SAAS,CAAEjG,QAASA,EAASc,KAAM1B,EAAMqC,oFAIrF,OACItB,EAAAC,EAAAC,cAACd,EAAgB2G,SAAjB,CAA0B3F,MAAO,CAAEM,MAAOsF,KAAKtF,MAAOI,SAAUkF,KAAKlF,WACjEd,EAAAC,EAAAC,cAACoF,EAAD,CAAQ3E,KAAMqF,KAAKtF,MAAMC,eAhBTtB,IAAM4G,WAsBvBN","file":"static/js/6.d9d4bd8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Step, Icon, Segment, Button, Card, Header, Item, Table, Grid } from 'semantic-ui-react';\r\nimport Currency from 'react-currency-formatter';\r\nimport { Link } from 'react-router-dom';\r\nimport { EcommerceContext } from '../../AppStore';\r\n\r\ninterface Dispatch {\r\n    handleStep(step: EStep): void\r\n    handleShipping(shipping: Shipping): void\r\n    handlePayment(payment: Payment): void\r\n}\r\n\r\ninterface CheckoutState {\r\n    step: EStep\r\n    shipping: Shipping\r\n    payment: Payment\r\n}\r\n\r\nexport interface CheckoutType {\r\n    state: CheckoutState\r\n    dispatch: Dispatch\r\n}\r\n\r\nconst CheckoutContext = React.createContext<CheckoutType | null>(null);\r\n\r\nenum EStep {\r\n    Shipping,\r\n    Payment,\r\n    Confirm\r\n}\r\n\r\nenum Shipping {\r\n    None,\r\n    Economic,\r\n    Express\r\n}\r\n\r\nenum Payment {\r\n    None,\r\n    Bitcoin,\r\n    Cartao,\r\n    PayPal,\r\n    Boleto\r\n}\r\n\r\nfunction getShippingPrice(shipping: Shipping) {\r\n    switch (shipping) {\r\n        case Shipping.Economic:\r\n            return 18.90\r\n        case Shipping.Express:\r\n            return 30.90\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nfunction getDiscount(total: number, payment: Payment) {\r\n\r\n    if (payment === Payment.Boleto) {\r\n        return ((total * 10) / 100)\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nconst StepHeader = () => (\r\n    <CheckoutContext.Consumer>\r\n        {\r\n            value => value && (\r\n                <Step.Group widths={3} attached='top'>\r\n                    <Step completed={value.state.step > EStep.Shipping} active={value.state.step === EStep.Shipping} onClick={() => value.dispatch.handleStep(EStep.Shipping)} >\r\n                        <Icon name='truck' />\r\n                        <Step.Content>\r\n                            <Step.Title>Entrega</Step.Title>\r\n                            <Step.Description>Escolha a forma de entrega</Step.Description>\r\n                        </Step.Content>\r\n                    </Step>\r\n                    <Step disabled={value.state.step < EStep.Payment} completed={value.state.step > EStep.Payment} active={value.state.step === EStep.Payment} onClick={() => value.dispatch.handleStep(EStep.Payment)}>\r\n                        <Icon name='credit card' />\r\n                        <Step.Content>\r\n                            <Step.Title>Pagamento</Step.Title>\r\n                            <Step.Description>Escolha o meio de pagamento</Step.Description>\r\n                        </Step.Content>\r\n                    </Step>\r\n                    <Step disabled={value.state.step < EStep.Confirm} active={value.state.step === EStep.Confirm}>\r\n                        <Icon name='info' />\r\n                        <Step.Content>\r\n                            <Step.Title>Finalizar compra</Step.Title>\r\n                            <Step.Description>Verifique os detalhes da compra</Step.Description>\r\n                        </Step.Content>\r\n                    </Step>\r\n                </Step.Group>\r\n            )}\r\n    </CheckoutContext.Consumer>\r\n)\r\n\r\nconst ConfirmContainer = () => {\r\n    return (\r\n        <CheckoutContext.Consumer>\r\n            {\r\n                checkout => checkout && (\r\n                    <EcommerceContext.Consumer>\r\n                        {value => value && (\r\n                            <div>\r\n                                <Table>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell width={10}>PRODUTOS</Table.HeaderCell>\r\n                                            <Table.HeaderCell>PREÇO UNITÁRIO</Table.HeaderCell>\r\n                                            <Table.HeaderCell>QUANTIDADE</Table.HeaderCell>\r\n                                            <Table.HeaderCell>SUBTOTAL</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n\r\n                                    <Table.Body>\r\n                                        {value.state.cart.itens().map((grupo, index) => {\r\n                                            return (\r\n                                                <Table.Row key={index}>\r\n                                                    <Table.Cell>\r\n                                                        <Item.Group>\r\n                                                            <Item>\r\n                                                                <Item.Image size='tiny' src={grupo.produto.imagem[0]} />\r\n                                                                <Item.Content>\r\n                                                                    <Item.Header>{grupo.produto.nome}</Item.Header>\r\n                                                                    <Item.Meta>Cor/Tamanho/etc</Item.Meta>\r\n                                                                    <Item.Description>\r\n                                                                        {grupo.produto.descricao}\r\n                                                                    </Item.Description>\r\n                                                                </Item.Content>\r\n                                                            </Item>\r\n                                                        </Item.Group>\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell>\r\n                                                        <Currency quantity={grupo.produto.preco} currency=\"BRL\" />\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell>\r\n                                                        {grupo.quantidade}\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell>\r\n                                                        <Currency quantity={grupo.getSubtotal()} currency=\"BRL\" />\r\n                                                    </Table.Cell>\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })}\r\n                                    </Table.Body>\r\n                                    <Table.Footer>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell>Subtotal :</Table.HeaderCell>\r\n                                            <Table.HeaderCell>\r\n                                                <Currency quantity={value.state.cart.totalPreco} currency=\"BRL\" />\r\n                                            </Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell>Frete :</Table.HeaderCell>\r\n                                            <Table.HeaderCell>\r\n                                                <Currency quantity={getShippingPrice(checkout.state.shipping)} currency=\"BRL\" />\r\n                                            </Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell>Pagamento :</Table.HeaderCell>\r\n                                            <Table.HeaderCell>\r\n                                                {Payment[checkout.state.payment]} (- <Currency quantity={getDiscount(value.state.cart.totalPreco, checkout.state.payment)} currency=\"BRL\" />)\r\n                                            </Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell />\r\n                                            <Table.HeaderCell>Total :</Table.HeaderCell>\r\n                                            <Table.HeaderCell>\r\n                                                <Currency quantity={getShippingPrice(checkout.state.shipping) + value.state.cart.totalPreco - getDiscount(value.state.cart.totalPreco, checkout.state.payment)} currency=\"BRL\" />\r\n                                            </Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Footer>\r\n                                </Table>\r\n                                <Grid style={{ height: \"80px\" }}>\r\n                                    <Grid.Column floated='right'>\r\n                                        <Button as={Link} to={`${process.env.PUBLIC_URL}/checkoutDone`} color=\"green\" onClick={() => value.dispatch.finish()}>FINALIZAR COMPRA</Button>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </div>\r\n                        )}\r\n                    </EcommerceContext.Consumer>\r\n                )}\r\n        </CheckoutContext.Consumer>\r\n    )\r\n}\r\nconst ShippingContainer = () => {\r\n    return (\r\n        <CheckoutContext.Consumer>\r\n            {\r\n                value => value && (\r\n                    <Card.Group centered className=\"checkout\">\r\n                        <Card raised onClick={() => value.dispatch.handleShipping(Shipping.Economic)}>\r\n                            <Header as='h5' icon>\r\n                                <Icon name='shipping' />\r\n                                Econômico\r\n                    <Header.Subheader>Média : 7 dias úteis após a postagem</Header.Subheader>\r\n                            </Header>\r\n                            <Card.Content extra textAlign=\"center\">\r\n                                <Currency quantity={getShippingPrice(Shipping.Economic)} currency=\"BRL\" />\r\n                            </Card.Content>\r\n                        </Card>\r\n                        <Card raised onClick={() => value.dispatch.handleShipping(Shipping.Express)}>\r\n                            <Header as='h5' icon >\r\n                                <Icon name='shipping fast' />\r\n                                Expresso\r\n                    <Header.Subheader>Média : 4 dias úteis após a postagem</Header.Subheader>\r\n                            </Header>\r\n                            <Card.Content extra textAlign=\"center\">\r\n                                <Currency quantity={getShippingPrice(Shipping.Express)} currency=\"BRL\" />\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Card.Group>\r\n                )}\r\n        </CheckoutContext.Consumer>\r\n    )\r\n}\r\n\r\nconst PaymentContainer = () => {\r\n    return (\r\n        <CheckoutContext.Consumer>\r\n            {\r\n                value => value && (\r\n                    <Card.Group itemsPerRow={3} className=\"checkout\">\r\n                        <Card raised color=\"yellow\" onClick={() => value.dispatch.handlePayment(Payment.Bitcoin)}>\r\n                            <Header as='h4' icon>\r\n                                <Icon name='bitcoin' color=\"yellow\" />\r\n                                Bitcoin\r\n                            <Header.Subheader>Pague com bitcoin.</Header.Subheader>\r\n                            </Header>\r\n                        </Card>\r\n                        <Card raised color=\"blue\" onClick={() => value.dispatch.handlePayment(Payment.Cartao)}>\r\n                            <Header as='h4' icon >\r\n                                <Icon name='credit card' color=\"blue\" />\r\n                                Cartão de Crédito\r\n                            <Header.Subheader>Pague com cartão de crédito.</Header.Subheader>\r\n                            </Header>\r\n                        </Card>\r\n                        <Card raised color=\"grey\" onClick={() => value.dispatch.handlePayment(Payment.PayPal)}>\r\n                            <Header as='h4' icon>\r\n                                <Icon name='paypal' color=\"grey\" />\r\n                                Paypal\r\n                            <Header.Subheader>Pague com paypal.</Header.Subheader>\r\n                            </Header>\r\n                        </Card>\r\n                        <Card raised color=\"black\" onClick={() => value.dispatch.handlePayment(Payment.Boleto)}>\r\n                            <Header as='h4' icon>\r\n                                <Icon name='barcode' color=\"black\" />\r\n                                Boleto\r\n                            <Header.Subheader>Pague com boleto. <span className='green-text'> (10% de desconto)</span></Header.Subheader>\r\n                            </Header>\r\n                        </Card>\r\n                    </Card.Group>\r\n                )\r\n            }\r\n        </CheckoutContext.Consumer>\r\n    )\r\n}\r\n\r\nconst Layout = (props: any) => {\r\n    const step = props.step;\r\n    let view;\r\n    switch (step) {\r\n        case EStep.Shipping:\r\n            view = <ShippingContainer />\r\n            break;\r\n        case EStep.Payment:\r\n            view = <PaymentContainer />\r\n            break;\r\n        case EStep.Confirm:\r\n            view = <ConfirmContainer />\r\n            break;\r\n        default:\r\n            view = <></>\r\n    }\r\n    return (\r\n        <div>\r\n            <StepHeader />\r\n            <Segment attached>\r\n                {view}\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass CheckoutContainer extends React.Component<{}, CheckoutState> {\r\n    state: CheckoutState = {\r\n        step: EStep.Shipping,\r\n        shipping: Shipping.None,\r\n        payment: Payment.None\r\n    };\r\n\r\n    dispatch: Dispatch = {\r\n        handleStep: (step: EStep) => { this.setState({ step: step }) },\r\n        handleShipping: (shipping: Shipping) => { this.setState({ shipping: shipping, step: EStep.Payment }) },\r\n        handlePayment: (payment: Payment) => { this.setState({ payment: payment, step: EStep.Confirm }) },\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CheckoutContext.Provider value={{ state: this.state, dispatch: this.dispatch }}>\r\n                <Layout step={this.state.step} />\r\n            </CheckoutContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckoutContainer;"],"sourceRoot":""}